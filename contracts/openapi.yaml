openapi: 3.1.0
info:
  title: PokerHub API
  version: 1.0.0
paths:
  /status:
    get:
      summary: Get service status
      responses:
        '200':
          description: Service status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /game/action:
    post:
      summary: Perform a game action
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameAction'
      responses:
        '200':
          description: Action accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /wallet/{id}/reserve:
    post:
      summary: Reserve funds in wallet
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amount'
      responses:
        '200':
          description: Funds reserved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /wallet/{id}/commit:
    post:
      summary: Commit reserved funds
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amount'
      responses:
        '200':
          description: Funds committed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /wallet/{id}/rollback:
    post:
      summary: Roll back reserved funds
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amount'
      responses:
        '200':
          description: Funds rolled back
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /wallet/{id}/withdraw:
    post:
      summary: Withdraw funds
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '200':
          description: Withdrawal accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /tournaments:
    get:
      summary: List tournaments
      responses:
        '200':
          description: Tournaments list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentList'
  /tournaments/{id}/prizes:
    post:
      summary: Calculate prize distribution
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculatePrizesRequest'
      responses:
        '200':
          description: Prize distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatePrizesResponse'
  /leaderboard:
    get:
      summary: Get leaderboard
      responses:
        '200':
          description: Top players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardResponse'
  /leaderboard/rebuild:
    post:
      summary: Rebuild leaderboard
      parameters:
        - in: query
          name: days
          schema:
            type: integer
            maximum: 30
      responses:
        '202':
          description: Rebuild started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /hands/{id}/proof:
    get:
      summary: Get RNG proof for a hand
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hand commitment proof
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandProof'
components:
  schemas:
    StatusResponse:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    MessageResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    Amount:
      type: object
      properties:
        amount:
          type: number
      required:
        - amount
    WithdrawRequest:
      type: object
      properties:
        amount:
          type: number
        deviceId:
          type: string
      required:
        - amount
        - deviceId
    GameAction:
      type: object
      properties:
        type:
          type: string
          enum:
            - join
            - bet
        tableId:
          type: string
        amount:
          type: number
      required:
        - type
        - tableId
    Tournament:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        buyIn:
          type: number
        prizePool:
          type: number
        players:
          type: object
          properties:
            current:
              type: number
            max:
              type: number
          required:
            - current
            - max
        registered:
          type: boolean
      required:
        - id
        - title
        - buyIn
        - prizePool
        - players
        - registered
    TournamentList:
      type: array
      items:
        $ref: '#/components/schemas/Tournament'
    CalculatePrizesRequest:
      type: object
      properties:
        prizePool:
          type: number
        payouts:
          type: array
          items:
            type: number
        bountyPct:
          type: number
        satelliteSeatCost:
          type: number
      required:
        - prizePool
        - payouts
    CalculatePrizesResponse:
      type: object
      properties:
        prizes:
          type: array
          items:
            type: number
        bountyPool:
          type: number
        seats:
          type: number
        remainder:
          type: number
      required:
        - prizes
    LeaderboardResponse:
      type: array
      items:
        type: string
    HandProof:
      type: object
      properties:
        seed:
          type: string
        nonce:
          type: string
        commitment:
          type: string
      required:
        - seed
        - nonce
        - commitment
