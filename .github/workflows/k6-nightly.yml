name: nightly-k6-metrics

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  ws-soak:
    runs-on: ubuntu-latest
    env:
      METRICS_URL: http://localhost:3000/metrics
    steps:
      - uses: actions/checkout@v4
      - name: Run ws soak test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: load/k6-ws-soak.js
          flags: --summary-export=ws-soak-summary.json --out json=ws-soak-metrics.json
      - name: Upload metrics to S3
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ws-soak-summary.json s3://${{ vars.K6_METRICS_BUCKET }}/ws-soak/summary-${GITHUB_RUN_ID}.json
          aws s3 cp ws-soak-metrics.json s3://${{ vars.K6_METRICS_BUCKET }}/ws-soak/metrics-${GITHUB_RUN_ID}.json
      - name: PagerDuty alert
        if: failure()
        run: |
          curl -X POST \
            -H 'Content-Type: application/x-yaml' \
            --data-binary @infra/observability/pagerduty-burn-rate.yml \
            ${{ secrets.PAGERDUTY_WEBHOOK_URL }}

  tables-10k:
    runs-on: ubuntu-latest
    needs: ws-soak
    steps:
      - uses: actions/checkout@v4
      - name: Run 10k tables test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: load/k6-10k-tables.js
          flags: --summary-export=10k-summary.json --out json=10k-metrics.json
      - name: Upload metrics to S3
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp 10k-summary.json s3://${{ vars.K6_METRICS_BUCKET }}/10k-tables/summary-${GITHUB_RUN_ID}.json
          aws s3 cp 10k-metrics.json s3://${{ vars.K6_METRICS_BUCKET }}/10k-tables/metrics-${GITHUB_RUN_ID}.json
      - name: PagerDuty alert
        if: failure()
        run: |
          curl -X POST \
            -H 'Content-Type: application/x-yaml' \
            --data-binary @infra/observability/pagerduty-burn-rate.yml \
            ${{ secrets.PAGERDUTY_WEBHOOK_URL }}
