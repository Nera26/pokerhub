name: k6-10k-chaos

on:
  workflow_dispatch:

jobs:
  tables-chaos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start toxiproxy and metrics stack
        run: |
          docker run -d --name toxiproxy -p 8474:8474 -p 3001:3001 ghcr.io/shopify/toxiproxy
          PACKET_LOSS=0.05 LATENCY_MS=200 JITTER_MS=50 ./load/chaos/toxiproxy-chaos.sh
          cp load/prometheus.yml ./prometheus.yml
          sed -i 's/host.docker.internal/localhost/' prometheus.yml
          docker run -d --name prom -p 9090:9090 -v $PWD/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
      - name: Start GC collector
        run: |
          METRICS_URL=http://localhost:3000/metrics INTERVAL=5 OUT_FILE=gc-heap-metrics.log CPU_THRESHOLD=80 GC_THRESHOLD=50 ./load/collect-gc-heap.sh &
          echo $! > gc_collector.pid
      - name: Run k6 10k tables scenario with chaos
        uses: grafana/k6-action@v0.2.0
        env:
          WS_URL: ws://localhost:3001
          TABLES: 10000
          SOCKETS: 80000
          ACK_P95_MS: 120
          ACK_P99_MS: 200
          GRAFANA_PUSH_URL: ${{ secrets.GRAFANA_PUSH_URL }}
        with:
          filename: load/k6-10k-tables.js
          flags: --address 0.0.0.0:5656 --summary-export=ack-summary.json --out json=ack-telemetry.json --out prometheus
      - name: Capture metrics
        if: always()
        run: |
          curl -s http://localhost:5656/metrics > k6-prom-metrics.txt || true
          docker logs toxiproxy > toxiproxy.log || true
          docker logs prom > prom.log || true
          kill $(cat gc_collector.pid) || true
      - name: Check thresholds
        run: ./load/check-thresholds.sh ack-summary.json
      - name: Upload metrics to S3
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ack-summary.json s3://${{ vars.K6_METRICS_BUCKET }}/10k-chaos/summary-${GITHUB_RUN_ID}.json
          aws s3 cp ack-telemetry.json s3://${{ vars.K6_METRICS_BUCKET }}/10k-chaos/metrics-${GITHUB_RUN_ID}.json
          aws s3 cp ack-histogram.json s3://${{ vars.K6_METRICS_BUCKET }}/10k-chaos/histogram-${GITHUB_RUN_ID}.json
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: k6-10k-chaos
          path: |
            ack-summary.json
            ack-telemetry.json
            ack-histogram.json
            gc-heap-metrics.log
            k6-prom-metrics.txt
            toxiproxy.log
            prom.log
            load/grafana-ack-latency.json
