name: canary-deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  spectator-privacy:
    runs-on: ubuntu-latest
    env:
      SPECTATOR_PRIVACY_BUCKET: ${{ secrets.SPECTATOR_PRIVACY_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER || vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT || vars.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID || vars.GCP_PROJECT_ID }}
      - uses: ./.github/actions/spectator-privacy-check
      - name: Verify sanitized logs
        if: always()
        run: |
          if rg -i "userId|tableSecret|sessionToken|email|ipAddress" backend-tests.log frontend-tests.log; then
            echo "PII found in logs" >&2
            exit 1
          fi
      - name: Copy logs to spectator bucket
        if: always()
        run: |
          gsutil cp backend-tests.log frontend-tests.log gs://$SPECTATOR_PRIVACY_BUCKET/${{ github.run_id }}/
      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spectator-privacy-logs
          path: |
            backend-tests.log
            frontend-tests.log

  canary:
    needs: spectator-privacy
    runs-on: ubuntu-latest
    environment: production
    env:
      DEPLOY_ENV: production
      CANARY_TRAFFIC_PERCENT: 5
      CANARY_DURATION_MINUTES: 30
      NAMESPACE: ${{ vars.K8S_NAMESPACE }}
      SERVICE: api
      STABLE: api
      CANARY: api-canary
      CANARY_RELEASE: canary
      PROMETHEUS: ${{ vars.PROMETHEUS_URL }}
      METRICS_URL: ${{ vars.METRICS_URL }}
      ERROR_RATE_THRESHOLD: ${{ vars.ERROR_RATE_THRESHOLD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Configure kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.27.3
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0
      - name: Validate observability configs
        run: |
          python -m pip install pyyaml >/dev/null
          python infra/observability/validate.py
      - name: Deploy canary
        run: scripts/canary-rollback.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Monitor ACK latency
        run: |
          npm install --no-save k6 >/dev/null
          npx k6 run load/k6-ws-packet-loss.js --summary-export=summary.json
          p95=$(jq '.metrics.ws_latency["p(95)"]' summary.json)
          slo=250
          echo "p95 ACK latency: ${p95} ms (SLO ${slo} ms)"
          if (( $(echo "$p95 > $slo" | bc -l) )); then
            echo "ACK latency SLO breach; rolling back" >&2
            scripts/canary-rollback.sh
            exit 1
          fi
        env:
          WS_URL: ${{ vars.CANARY_WS_URL }}
          PACKET_LOSS: 0.05
      - name: Verify SLO metrics
        id: metrics
        run: scripts/check-metrics.sh
        continue-on-error: true
      - name: Canary rollback on SLO violation
        if: steps.metrics.outcome != 'success'
        run: scripts/canary-rollback.sh
