name: spectator-bucket-audit
concurrency:
  group: "spectator-bucket-audit"
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  check-proof-archive:
    if: ${{ always() }}
    uses: ./.github/workflows/check-proof-archive.yml
    secrets: inherit

  spectator-bucket-audit:
    runs-on: ubuntu-latest
    needs:
      - check-proof-archive
    env:
      SPECTATOR_LOGS_BUCKET: ${{ secrets.SPECTATOR_LOGS_BUCKET || vars.SPECTATOR_LOGS_BUCKET }}
      SPECTATOR_LOGS_MIN_RETENTION_DAYS: ${{ secrets.SPECTATOR_LOGS_MIN_RETENTION_DAYS || vars.SPECTATOR_LOGS_MIN_RETENTION_DAYS }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER || vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT || vars.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID || vars.GCP_PROJECT_ID }}
      - name: Verify log bucket policies
        id: audit
        run: |
          set +e
          out=$(bash <<'SCRIPT'
          set -e
          UBLA_OUTPUT=$(gsutil bucketpolicyonly get gs://$SPECTATOR_LOGS_BUCKET 2>&1)
          echo "$UBLA_OUTPUT"
          if ! echo "$UBLA_OUTPUT" | grep -qi 'enabled: true'; then
            echo 'Uniform bucket-level access is disabled' >&2
            exit 1
          fi
          ENC_OUTPUT=$(gsutil kms encryption gs://$SPECTATOR_LOGS_BUCKET 2>&1)
          echo "$ENC_OUTPUT"
          if ! echo "$ENC_OUTPUT" | grep -qi 'Default KMS key'; then
            echo 'Bucket default KMS encryption key not set' >&2
            exit 1
          fi
          RETENTION_OUTPUT=$(gsutil retention get gs://$SPECTATOR_LOGS_BUCKET 2>&1)
          echo "$RETENTION_OUTPUT"
          RETENTION_DAYS=$(echo "$RETENTION_OUTPUT" | grep -Eo '[0-9]+d' | head -n1 | tr -d 'd')
          REQUIRED_DAYS=${SPECTATOR_LOGS_MIN_RETENTION_DAYS:-30}
          if [ -z "$RETENTION_DAYS" ] || [ "$RETENTION_DAYS" -lt "$REQUIRED_DAYS" ]; then
            echo "Bucket retention $RETENTION_DAYS d below required $REQUIRED_DAYS d" >&2
            exit 1
          fi
SCRIPT
          )
          status=$?
          echo "$out"
          echo "$out" >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$out" > bucket-audit.log
          exit $status
      - name: Prepare spectator bucket audit alert
        if: failure()
        env:
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          jq -n --arg channel "$SLACK_CHANNEL_ID" --rawfile text bucket-audit.log \
            '{channel: $channel, text: $text}' > spectator-bucket-audit-slack.json
          cp bucket-audit.log spectator-bucket-audit-alert.md
      - name: Slack spectator bucket audit alert
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          method: chat.postMessage
          payload-file-path: spectator-bucket-audit-slack.json
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Create issue for spectator bucket audit
        if: failure()
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Spectator logs bucket policy violation"
          content-filepath: spectator-bucket-audit-alert.md
