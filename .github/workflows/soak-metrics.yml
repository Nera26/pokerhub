on:
  workflow_call:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

name: soak-metrics
concurrency:
  group: "soak-metrics"
  cancel-in-progress: true

jobs:
  check-proof-archive:
    if: ${{ always() }}
    uses: ./.github/workflows/check-proof-archive.yml
    secrets: inherit
  check:
    runs-on: ubuntu-latest
    env:
      SOAK_LATENCY_P50_MS: ${{ vars.SOAK_LATENCY_P50_MS }}
      SOAK_LATENCY_P95_MS: ${{ vars.SOAK_LATENCY_P95_MS }}
      SOAK_LATENCY_P99_MS: ${{ vars.SOAK_LATENCY_P99_MS }}
      SOAK_THROUGHPUT_MIN: ${{ vars.SOAK_THROUGHPUT_MIN }}
      SOAK_GC_P95_MS: ${{ vars.SOAK_GC_P95_MS }}
      SOAK_RSS_GROWTH_PCT: ${{ vars.SOAK_RSS_GROWTH_PCT }}
      SOAK_TRENDS_WINDOW: ${{ vars.SOAK_TRENDS_WINDOW }}
      SOAK_TRENDS_DEVIATION_PCT: ${{ vars.SOAK_TRENDS_DEVIATION_PCT }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
      - id: trend
        run: |
          set -o pipefail
          npx ts-node scripts/check-soak-trend-regression.ts 2>&1 | tee soak-trend-regression.log
      - name: Analyze soak trends
        run: npx ts-node scripts/analyze-soak-trends.ts metrics/
      - name: Publish soak trend metrics to Cloud Monitoring
        if: always() && github.event_name == 'schedule'
        run: |
          lat_p95=$(jq -r '.latency.p95' metrics/baseline.json)
          throughput=$(jq -r '.throughput' metrics/baseline.json)
          lat_delta=$(jq -r '.latency.p95' metrics/trend-delta.json)
          thr_delta=$(jq -r '.throughput' metrics/trend-delta.json)
          gcloud monitoring metrics write custom.googleapis.com/soak/latency_p95 "$lat_p95" --labels=run_id=${GITHUB_RUN_ID},commit_sha=${GITHUB_SHA}
          gcloud monitoring metrics write custom.googleapis.com/soak/throughput "$throughput" --labels=run_id=${GITHUB_RUN_ID},commit_sha=${GITHUB_SHA}
          gcloud monitoring metrics write custom.googleapis.com/soak/latency_p95_delta "$lat_delta" --labels=run_id=${GITHUB_RUN_ID},commit_sha=${GITHUB_SHA}
          gcloud monitoring metrics write custom.googleapis.com/soak/throughput_delta "$thr_delta" --labels=run_id=${GITHUB_RUN_ID},commit_sha=${GITHUB_SHA}
      - id: check
        if: always()
        run: node scripts/check-soak-metrics.ts
      - name: Ensure soak summary
        run: test -f soak-summary.json
      - name: Prepare regression alert
        if: steps.check.outcome == 'failure'
        env:
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          msg=$(jq -r '.regressions[].message' soak-regression.json | paste -sd '; ' -)
          jq -n --arg channel "$SLACK_CHANNEL_ID" --arg text "Soak metrics regression detected: $msg" '{channel:$channel, text:$text}' > slack.json
          printf "Soak metrics regression detected\n\n\`\`\`\n%s\n\`\`\`\n" "$(cat soak-regression.json)" > soak-regression.md
      - name: Slack alert
        if: steps.check.outcome == 'failure'
        uses: slackapi/slack-github-action@v1
        with:
          method: chat.postMessage
          payload-file-path: slack.json
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: PagerDuty alert
        if: steps.check.outcome == 'failure'
        env:
          PAGERDUTY_ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }}
        run: |
          msg=$(jq -r '.regressions[].message' soak-regression.json | paste -sd '; ' -)
          jq -n --arg rk "$PAGERDUTY_ROUTING_KEY" --arg msg "$msg" '{routing_key:$rk,event_action:"trigger",payload:{summary:$msg,source:"soak-metrics",severity:"critical"}}' > pd.json
          curl -X POST -H 'Content-Type: application/json' -d @pd.json https://events.pagerduty.com/v2/enqueue
      - name: Open soak regression issue
        if: steps.check.outcome == 'failure'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "SLA breached: soak metrics"
          content-filepath: soak-regression.md
      - name: Prepare trend regression alert
        if: steps.trend.outcome == 'failure'
        env:
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          msg=$(cat soak-trend-regression.log | paste -sd '; ' -)
          jq -n --arg channel "$SLACK_CHANNEL_ID" --arg text "Soak trend regression detected: $msg" '{channel:$channel, text:$text}' > slack-trend.json
          printf "Soak trend regression detected\n\n\`\`\`\n%s\n\`\`\`\n" "$(cat soak-trend-regression.log)" > soak-trend-regression.md
      - name: Slack alert (trend)
        if: steps.trend.outcome == 'failure'
        uses: slackapi/slack-github-action@v1
        with:
          method: chat.postMessage
          payload-file-path: slack-trend.json
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: PagerDuty alert (trend)
        if: steps.trend.outcome == 'failure'
        env:
          PAGERDUTY_ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }}
        run: |
          msg=$(cat soak-trend-regression.log | paste -sd '; ' -)
          jq -n --arg rk "$PAGERDUTY_ROUTING_KEY" --arg msg "$msg" '{routing_key:$rk,event_action:"trigger",payload:{summary:$msg,source:"soak-metrics",severity:"critical"}}' > pd-trend.json
          curl -X POST -H 'Content-Type: application/json' -d @pd-trend.json https://events.pagerduty.com/v2/enqueue
      - name: Open soak trend regression issue
        if: steps.trend.outcome == 'failure'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "SLA breached: soak trends"
          content-filepath: soak-trend-regression.md
      - name: Upload soak summary
        if: always() && hashFiles('soak-summary.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: soak-summary
          path: soak-summary.json
      - name: Publish soak summary
        if: always() && hashFiles('soak-summary.json') != ''
        env:
          SOAK_TRENDS_BUCKET: ${{ secrets.SOAK_TRENDS_BUCKET }}
        run: |
          gcloud storage cp soak-summary.json "gs://${SOAK_TRENDS_BUCKET}/soak-summary-${GITHUB_RUN_ID}.json"
      - name: Load soak summary to BigQuery
        if: always() && hashFiles('soak-summary.json') != ''
        run: |
          bq load --source_format=NEWLINE_DELIMITED_JSON \
            --schema=infra/analytics/soak_trends.schema.json \
            ops_metrics.soak_trends soak-summary.json

    needs:
    - check-proof-archive
  spectator-privacy:
    if: ${{ always() }}
    uses: ./.github/workflows/spectator-privacy.yml
    secrets: inherit
    needs:
    - check-proof-archive
