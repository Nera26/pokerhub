name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run docs:lint
      - run: npm run docs:check

  dr-runbook-check:
    needs: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npx ts-node scripts/check-dr-runbook.ts

  contracts:
    needs: [docs, dr-runbook-check]
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm ci --prefix backend
      - run: npm ci --prefix frontend
      - name: Backend contract tests
        run: npm run test:contracts --prefix backend
      - name: Frontend contract tests
        run: npm run test:contracts --prefix frontend

  proof-archive:
    needs: contracts
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: proof
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/proof
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm ci --legacy-peer-deps --prefix backend
      - name: Seed proof fixture
        run: psql "$DATABASE_URL" -f backend/test/fixtures/proof-hand.sql
      - name: Export proof
        run: npx -y ts-node scripts/export-hand-proof.ts 11111111-1111-1111-1111-111111111111
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
      - name: Validate proof archive
        run: npx -y ts-node scripts/validate-proof-archive.ts

  proof-archive-integration:
    needs: proof-archive
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm ci --legacy-peer-deps --prefix backend
      - name: Test proof archive migrations
        run: npx -y ts-node scripts/test-proof-archive-migrations.ts

  unit:
    needs:
      - contracts
      - proof-archive-integration
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: ./scripts/test-stages.sh unit | tee unit.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-${{ github.sha }}
          path: unit.log

  property:
    needs: unit
    if: ${{ always() }}
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: ./scripts/test-stages.sh property | tee property.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: property-${{ github.sha }}
          path: property.log
  spectator-privacy:
    needs: property
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm ci --prefix backend
      - run: npm ci --prefix frontend
      - run: npm test --prefix backend "test/game/spectator.*spec.ts"
      - run: npm test --prefix frontend "spectator/privacy.test.tsx"
  integration:
    needs: spectator-privacy
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: ./scripts/test-stages.sh integration | tee integration.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-${{ github.sha }}
          path: integration.log

  e2e:
    needs: integration
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: ./scripts/test-stages.sh e2e | tee e2e.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-${{ github.sha }}
          path: e2e.log

  load:
    needs: e2e
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - uses: grafana/setup-k6@v1
      - run: |
          mkdir -p load/results
          k6 run load/k6-swarm.js --vus 10 --duration 10s --summary-export=load/results/summary.json | tee load/results/k6.log
      - run: load/check-thresholds.sh load/results/summary.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: load-${{ github.sha }}
          path: |
            load/results/summary.json
            load/results/k6.log

  chaos:
    needs: load
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - uses: grafana/setup-k6@v1
      - run: ./scripts/test-stages.sh chaos | tee chaos.log
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-${{ github.sha }}
          path: chaos.log

  soak:
    needs: chaos
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - uses: grafana/setup-k6@v1
      - run: |
          mkdir -p load/results
          k6 run load/k6-ws-soak.js --vus 10 --duration 30s --summary-export=load/results/ws-soak-summary.json
      - run: load/check-thresholds.sh load/results/ws-soak-summary.json metrics/gc-histogram.json metrics/heap-histogram.json metrics/cpu-histogram.json
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Analyze soak trends
        run: npx ts-node --compiler-options '{"module":"commonjs"}' scripts/analyze-soak-trends.ts metrics
        env:
          SOAK_TRENDS_BUCKET: ${{ secrets.SOAK_TRENDS_BUCKET }}
      - name: Upload baseline metrics
        if: github.ref == 'refs/heads/main'
        run: aws s3 cp metrics/baseline.json "s3://${{ secrets.SOAK_TRENDS_BUCKET }}/baseline/"
      - name: Open soak regression issue
        if: failure()
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Soak trends regression detected
          content-filepath: metrics/baseline.json
      - name: Sync soak metrics
        if: always()
        run: aws s3 sync metrics "s3://${{ secrets.SOAK_TRENDS_BUCKET }}/soak-${{ github.run_id }}/"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: soak-${{ github.sha }}
          path: |
            load/results/ws-soak-summary.json
            metrics/gc-histogram.json
            metrics/heap-histogram.json
            metrics/cpu-histogram.json
            metrics/baseline.json
