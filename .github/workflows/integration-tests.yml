name: integration-tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install backend deps
        working-directory: backend
        run: npm ci
      - name: Run backend tests (unit + property)
        working-directory: backend
        run: npm test
      - name: Run leaderboard benchmark
        working-directory: backend
        run: npm run rebuild:leaderboard -- --benchmark --days=2 --players=10 --sessions=20 --assert-duration=5000
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Start services
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up -d --build
      - name: Run WebSocket load
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml run --rm load
      - name: Report ACK latency stats
        run: |
          node -e "const s=require('./load/ack-summary.json'); const m=s.metrics; console.log('p95', m.ack_latency.values['p(95)']); console.log('p99', m.ack_latency.values['p(99)']); console.log('ack_success_rate', m.ack_success.values.rate);"
      - name: Start toxiproxy
        run: docker run -d --name toxiproxy -p 8474:8474 -p 3001:3001 ghcr.io/shopify/toxiproxy
      - name: Run Socket.IO chaos load
        env:
          WS_URL: ws://localhost:3001
          TABLES: 10000
          SOCKETS: 80000
          UPSTREAM: localhost:4000
        run: npm run test:load
      - name: Upload Socket.IO latency histogram
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: socket-io-latency
          path: backend/latency-hist.json
      - name: Run integration tests (lobby + gameplay)
        working-directory: frontend
        run: npm run test:e2e:integration
      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml down -v
