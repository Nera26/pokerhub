name: deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      DEPLOY_ENV: production
      K8S_NAMESPACE: ${{ vars.K8S_NAMESPACE }}
      HEALTH_CHECK_URL: ${{ vars.HEALTH_CHECK_URL }}
      PROMETHEUS_URL: ${{ vars.PROMETHEUS_URL }}
      ACK_LATENCY_THRESHOLD_MS: 120
      ERROR_RATE_THRESHOLD: 0.0005
      DR_DRILL_SLA_DAYS: 7
    steps:
      - uses: actions/checkout@v4
      - name: Verify recent DR drill
        id: drdrill
        env:
          SLA_DAYS: ${{ env.DR_DRILL_SLA_DAYS }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          resp=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/dr-drill.yml/runs?per_page=1")
          ts=$(echo "$resp" | jq -r '.workflow_runs[0].updated_at')
          conclusion=$(echo "$resp" | jq -r '.workflow_runs[0].conclusion')
          echo "timestamp=$ts" >> "$GITHUB_OUTPUT"
          now=$(date -u +%s)
          run_ts=$(date -d "$ts" -u +%s)
          max_age=$((SLA_DAYS * 86400))
          age=$((now - run_ts))
          if [ "$conclusion" != "success" ]; then
            echo "Latest dr-drill run concluded with $conclusion" >&2
            exit 1
          fi
          if [ "$age" -gt "$max_age" ]; then
            echo "Latest dr-drill run is older than ${SLA_DAYS}d" >&2
            exit 1
          fi
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Configure kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.27.3
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0
      - name: Validate observability configs
        run: |
          python -m pip install pyyaml >/dev/null
          python infra/observability/validate.py
      - name: Run spectator privacy tests
        run: npm test --prefix backend test/game/spectator-privacy.spec.ts
      - name: Run canary deploy
        run: bash deploy/canary.sh ${{ github.sha }}
      - name: Query Prometheus metrics
        id: metrics
        continue-on-error: true
        run: |
          ACK_QUERY='histogram_quantile(0.95, rate(game_action_ack_latency_ms_bucket[5m]))'
          ERR_QUERY='sum(rate(http_requests_total{status=~"5.."}[5m])) / sum(rate(http_requests_total[5m]))'
          ack=$(curl -sG "$PROMETHEUS_URL/api/v1/query" --data-urlencode "query=$ACK_QUERY" | jq -r '.data.result[0].value[1]')
          err=$(curl -sG "$PROMETHEUS_URL/api/v1/query" --data-urlencode "query=$ERR_QUERY" | jq -r '.data.result[0].value[1]')
          jq -n --arg ack "$ack" --arg err "$err" '{game_action_ack_p95_ms: ($ack|tonumber), http_error_rate: ($err|tonumber)}' > metrics.json
          echo "ack_p95_ms=$ack" >> $GITHUB_OUTPUT
          echo "http_error_rate=$err" >> $GITHUB_OUTPUT
          if (( $(echo "$ack > $ACK_LATENCY_THRESHOLD_MS" | bc -l) )) || (( $(echo "$err > $ERROR_RATE_THRESHOLD" | bc -l) )); then
            exit 1
          fi
      - name: Canary rollback on SLO violation
        if: steps.metrics.outcome != 'success'
        run: |
          bash deploy/rollback.sh
          echo "outcome=rollback" > outcome.txt
          exit 1
      - name: Record successful deployment
        if: steps.metrics.outcome == 'success'
        run: echo "outcome=success" > outcome.txt
      - name: Promote canary
        if: steps.metrics.outcome == 'success'
        run: scripts/promote.sh
      - name: Upload deployment metrics
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: deployment-metrics
          path: |
            metrics.json
            outcome.txt
      - name: Deployment summary
        if: always()
        run: |
          {
            echo "### Deployment Audit"
            echo "- DR drill last run: ${{ steps.drdrill.outputs.timestamp }}"
            echo "- game_action_ack_p95_ms: ${{ steps.metrics.outputs.ack_p95_ms }}"
            echo "- http_error_rate: ${{ steps.metrics.outputs.http_error_rate }}"
          } >> "$GITHUB_STEP_SUMMARY"
