name: proof-archive

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  archive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install backend dependencies
        run: npm ci --legacy-peer-deps --prefix backend
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
      - name: Export recent hand proofs
        run: |
          ids=$(psql "$DATABASE_URL" -Atc "SELECT id FROM hand WHERE seed IS NOT NULL AND nonce IS NOT NULL AND created_at >= NOW() - INTERVAL '1 day'")
          mkdir -p storage/proofs
          failed=0
          for id in $ids; do
            if ! npx -y ts-node scripts/export-hand-proof.ts "$id"; then
              failed=1
            fi
          done
          if [ -z "$ids" ]; then
            echo "No hand proofs found to export" >&2
            exit 1
          fi
          if [ "$failed" -ne 0 ]; then
            exit 1
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: Generate checksum manifest
        run: |
          cd storage/proofs
          if ls *.json >/dev/null 2>&1; then
            sha256sum *.json > manifest.txt
          else
            : > manifest.txt
          fi
      - name: Validate exported proofs and manifest
        run: |
          set -o pipefail
          npx -y ts-node scripts/validate-proof-archive.ts 2>&1 | tee proof-validation.log
      - name: Upload validation logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: proof-validation-${{ github.run_id }}
          path: proof-validation.log
          retention-days: 30
      - name: Sync proofs to GCS
        if: success()
        run: gcloud storage cp storage/proofs/* "gs://${{ secrets.PROOF_ARCHIVE_BUCKET }}/$(date +%Y-%m-%d)/"
      - name: Restore and validate archived proof
        if: success()
        run: |
          tmpdir=$(mktemp -d)
          prefix="gs://${{ secrets.PROOF_ARCHIVE_BUCKET }}/$(date +%Y-%m-%d)/"
          file=$(gcloud storage ls "$prefix" | awk -F/ '{print $NF}' | grep '.json$' | head -n 1)
          if [ -z "$file" ]; then
            echo "No proof files found in archive" >&2
            exit 1
          fi
          gcloud storage cp "${prefix}${file}" "$tmpdir/$file"
          gcloud storage cp "${prefix}manifest.txt" "$tmpdir/manifest.txt"
          npx -y ts-node scripts/restore-proof-check.ts "$tmpdir/$file" "$tmpdir/manifest.txt" 2>&1 | tee restore-validation.log
      - name: Upload restore validation logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: restore-proof-validation-${{ github.run_id }}
          path: restore-validation.log
          retention-days: 30
      - name: Upload proofs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: hand-proofs-${{ github.run_id }}
          path: storage/proofs
          retention-days: 30
      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            { "text": "Hand proof archive failed for ${GITHUB_REPOSITORY}@${GITHUB_SHA}" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: PagerDuty alert on failure
        if: failure()
        env:
          ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }}
        run: |
          curl -X POST https://events.pagerduty.com/v2/enqueue \
            -H 'Content-Type: application/json' \
            -d '{"routing_key":"'$ROUTING_KEY'","event_action":"trigger","payload":{"summary":"Hand proof archive failed","source":"github-actions","severity":"error"}}'
