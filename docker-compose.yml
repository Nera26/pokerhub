version: "3.9"

services:
  api-gateway:
    build: ./infra/api-gateway
    image: pokerhub-kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
    volumes:
      - ./infra/api-gateway/kong.yml:/usr/local/kong/declarative/kong.yml:ro
    ports:
      - "8080:8000"   # proxy (HTTP)
      - "8443:8443"   # proxy (HTTPS)
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: npm run start:dev
    env_file:
      - ./backend/.env
    environment:
      # Only keep overrides that are not in backend/.env
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp-service-account.json
    volumes:
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/secrets/gcp-service-account.json:ro
      - ./backend:/backend
      - ./shared:/shared
      - ./contracts:/contracts
      - ./node_modules:/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      storage:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  db:
    build:
      context: ./infra/db
    image: pokerhub-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pokerhub
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    build: ./infra/redis
    image: pokerhub-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    build: ./infra/rabbitmq
    image: pokerhub-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

  storage:
    build: ./infra/storage
    image: pokerhub-fake-gcs
    command: -scheme http -backend memory -port 4443
    ports:
      - "4443:4443"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS \"http://localhost:4443/storage/v1/b?project=test\" >/dev/null"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    environment:
      - CLICKHOUSE_DB=analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ports:
      - "8123:8123"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"
        ]
      interval: 5s
      timeout: 5s
      retries: 20
