version: '3.8'
services:
  api-gateway:
    image: kong:3.7
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
    volumes:
      - ./infrastructure/api-gateway/kong.yml:/usr/local/kong/declarative/kong.yml:ro
    ports:
      - '8080:8000'
      - '8443:8443'
    depends_on:
      - backend
  backend:
    build: ./backend
    command: npm run start:dev
    env_file: .env
    environment:
      - GCP_PROJECT=${GCP_PROJECT}
      - GCS_BUCKET=${GCS_BUCKET}
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp-service-account.json
      - GCS_EMULATOR_HOST=${GCS_EMULATOR_HOST}
      - DB_SYNC=${DB_SYNC}
    volumes:
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/secrets/gcp-service-account.json:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      storage:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pokerhub
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'status']
      interval: 5s
      timeout: 5s
      retries: 5
  storage:
    image: fsouza/fake-gcs-server:latest
    command: -scheme http -backend memory
    ports:
      - '4443:4443'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4443/storage/v1/b']
      interval: 5s
      timeout: 5s
      retries: 5

