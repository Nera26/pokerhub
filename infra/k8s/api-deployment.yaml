---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: ghcr.io/pokerhub/api:latest
          env:
            - name: DB_PRIMARY_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-endpoints
                  key: PRIMARY_ENDPOINT
            - name: DATABASE_URL
              value: postgres://postgres:postgres@$(DB_PRIMARY_HOST):5432/pokerhub
            - name: DB_REPLICA_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-endpoints
                  key: REPLICA_ENDPOINT
            - name: DB_FAILOVER_STRATEGY
              value: promote-replica
            - name: REDIS_URL
              value: redis://redis:6379
            - name: ALERTMANAGER_URL
              value: http://alertmanager:9093
            - name: ELASTIC_URL
              valueFrom:
                configMapKeyRef:
                  name: logging-config
                  key: ELASTIC_URL
            - name: LOKI_URL
              valueFrom:
                configMapKeyRef:
                  name: logging-config
                  key: LOKI_URL
            - name: ELASTIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: logging-credentials
                  key: ELASTIC_API_KEY
            - name: LOKI_BASIC_AUTH
              valueFrom:
                secretKeyRef:
                  name: logging-credentials
                  key: LOKI_BASIC_AUTH
            - name: NODE_EXTRA_CA_CERTS
              value: /etc/pokerhub/certs/elastic-ca.pem
          resources:
            requests:
              cpu: "1"
            limits:
              cpu: "1"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: elastic-ca
              mountPath: /etc/pokerhub/certs
              readOnly: true
      volumes:
        - name: elastic-ca
          secret:
            secretName: logging-credentials
            items:
              - key: ELASTIC_CA_CERT
                path: elastic-ca.pem
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - port: 80
      targetPort: 3000
